name: Build
env:
    GCP_DOCKER_SERVER: 'gcr.io' # must be GCP
    # pushing to american servers because that's how other teams do it
    GCP_PROJECT: 'connect-314908'
    HELM_REPO_URL: 'core.harbor.tooling.owkin.com/chartrepo/connect-frontend'
# secrets:
#   GCP_SERVICE_ACCOUNT_KEY_JSON
#   HELM_REPO_USERNAME
#   HELM_REPO_PASSWORD
#   GH_PAT_USERNAME
#   GH_PAT
on:
    push:
        branches: [main]
        tags: ['*']
        # FYI this isn't triggered when more than 3 tags are pushed at once
        # https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads#push
    workflow_dispatch: {} # For running by hand from the web UI
jobs:
    build:
        name: Build Docker image
        outputs:
            version: ${{ steps.set_version.outputs.version }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-python@v2
              with:
                  python-version: '>=3.9.0 <4.0.0'
            - run: python3 -m pip install -r ci/cilib/requirements.txt

            - run: printf 'VERSION=%s\n' "$(ci/version --insert-prerelease unstable)" >> $GITHUB_ENV
            - id: set_version
              run: printf "::set-output name=version::%s" '${{env.VERSION}}'
            - run: printf 'IMAGE_FULL_TAG=%s/%s/connect-frontend:%s\n' $GCP_DOCKER_SERVER $GCP_PROJECT "$(ci/version tag)" >> $GITHUB_ENV

            - run: DOCKER_BUILDKIT=1 docker build . -t '${{env.IMAGE_FULL_TAG}}'
            - run: printf '${{ secrets.GCP_SERVICE_ACCOUNT_KEY_JSON }}' | docker login -u _json_key --password-stdin https://$GCP_DOCKER_SERVER
            - run: docker push $IMAGE_FULL_TAG

    helm:
        name: Package Helm chart
        runs-on: ubuntu-latest
        needs: [build]
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-python@v2
              with:
                  python-version: '>=3.9.0 <4.0.0'
            - run: python3 -m pip install -r ci/cilib/requirements.txt
            - run: sudo snap install helm --classic && helm plugin install https://github.com/chartmuseum/helm-push

            - run: helm lint charts/connect-frontend
            - run: printf 'HELM_VERSION=%s\n' "$(ci/version --insert-prerelease unstable)" >> $GITHUB_ENV
            - run: |
                  helm package charts/connect-frontend \
                  --version '${{env.HELM_VERSION}}' \
                  --app-version '${{needs.build.outputs.version}}'
            - uses: actions/upload-artifact@v2
              with:
                  name: connect-frontend-${{ env.HELM_VERSION }}.tgz
                  path: connect-frontend-${{ env.HELM_VERSION }}.tgz
                  if-no-files-found: error

            - run: |
                  helm repo add owkin-priv https://${{env.HELM_REPO_URL}} \
                  --username='${{secrets.HELM_REPO_USERNAME}}' --password='${{secrets.HELM_REPO_PASSWORD}}'
                  helm push connect-frontend-${{ env.HELM_VERSION }}.tgz owkin-priv

    release:
        name: Trigger a release for each tag
        runs-on: ubuntu-latest
        needs: [helm]
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - name: Trigger a release
              run: |
                  for tag in $(git tag --points-at HEAD)
                  do
                    curl -X POST --fail \
                    https://api.github.com/repos/${{ github.repository }}/actions/workflows/release.yaml/dispatches \
                    -H "Accept: application/vnd.github.v3+json" \
                    -d '{"ref":"'$tag'"}' \
                    -u '${{ secrets.GH_PAT_USERNAME }}:${{ secrets.GH_PAT }}'
                  done
