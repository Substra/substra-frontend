name: Build
# this workflow builds and pushes the "dev" versions of image and helm chart
# The versions are predictable:
#  helm: ci/version helm --insert-dev-info [--ref COMMIT_ID]
#  app: ci/version app --insert-dev-info [--ref COMMIT_ID]
#  docker: ci/version app tag --insert-dev-info [--ref COMMIT_ID]
#          (or just replacing + with _ in the app version, basically)
env:
    REGISTRY: ghcr.io
on:
    push:
        branches: [main]
    workflow_dispatch: {} # For running by hand from the web UI
jobs:
    build-image:
        name: Build Docker image
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Set frontend version
              run: |
                  echo "FRONTEND_VERSION=$(jq '.version' package.json | sed 's/"//g')" >> $GITHUB_ENV
                  echo "COMMIT_DATE=`git show -s --format=%cs HEAD | tr -d -`" >> $GITHUB_ENV

            - uses: docker/metadata-action@v4
              with:
                  images: 'ghcr.io/substra/substra-frontend'
                  tags: |
                      type=sha,prefix=${{env.FRONTEND_VERSION}}-dev.${{env.COMMIT_DATE}}_
                      type=ref,event=branch

            - uses: docker/build-push-action@v3
              with:
                  push: ${{ github.event_name != 'pull_request' }}
                  file: ./docker/substra-frontend/Dockerfile
                  context: .
                  tags: ${{ steps.docker-metadata.outputs.tags }}
                  labels: ${{ steps.docker-metadata.outputs.labels }}

    build-helm:
        name: Package Helm chart
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-python@v2
              with:
                  python-version: '>=3.9.0 <4.0.0'
            - run: python3 -m pip install -r ci/cilib/requirements.txt

            - run: helm lint charts/substra-frontend
            - run: helm package charts/substra-frontend
            - uses: actions/upload-artifact@v2
              with:
                  path: substra-frontend-*.tgz
                  if-no-files-found: error
